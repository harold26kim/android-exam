apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'realm-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.exam.upraxis"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.code
        versionName "${versionMajor}.${versionMinor}.${versionPatch}+${code}"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        flavorDimensions "default"
    }

    buildFeatures {
        dataBinding = true
    }

    signingConfigs {
        release {
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
        }
        release {
            signingConfig signingConfigs.release

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    productFlavors {
        /**
         * Staging
         * */
        staging {
            versionName "${versionMajor}.${versionMinor}.${versionPatch}+${code}"
            setProperty("archivesBaseName", "upraxis-" + versionName)
            buildConfigField 'String', 'HOST', BASE_URL_STAGING
        }

        /**
         * Play Store Release
         * */
        live {
            versionName "${versionMajor}.${versionMinor}.${versionPatch}"
            setProperty("archivesBaseName", "upraxis-" + versionName)
            buildConfigField 'String', 'HOST', BASE_URL_PROD
        }
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // App's dependencies
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.core:core-ktx:$rootProject.coreKtxVersion"
    implementation "androidx.legacy:legacy-support-v$rootProject.legacyVersion"

    // UI View, Layout or Widget
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"

    // Material UI
    implementation "com.google.android.material:material:$rootProject.googleMaterial"
    implementation "com.afollestad.material-dialogs:core:$rootProject.materialDialog"

    // Spinkit UI
    implementation "com.github.ybq:Android-SpinKit:$rootProject.spinkitVersion"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-fragment:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-ui:$rootProject.navigationVersion"

    // Lifecycle
    implementation "android.arch.lifecycle:runtime:$project.lifecycleVersion"
    implementation "android.arch.lifecycle:extensions:$project.lifecycleVersion"

    //    implementation 'android.arch.paging:runtime:1.0.1'
    kapt "android.arch.lifecycle:compiler:$project.lifecycleVersion"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rootProject.rx_kotlin_version"

    // Dagger dependencies

    //    compileOnly 'org.glassfish:javax.annotation:10.0-b28'
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    // Network
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"

    // Glide 4
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    //Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"

    // Testing dependencies
    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "org.amshove.kluent:kluent:$rootProject.kluentVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.androidxJunitVersion"
//    androidTestImplementation "com.android.support.test:runner:$rootProject.runnerVersion"
//    androidTestImplementation "com.android.support.test:rules:$rootProject.runnerVersion"

    //Espresso
//    implementation  "androidx.test.espresso:espresso-idling-resource:$rootProject.espressoCoreVersion"
//    testImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoCoreVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoCoreVersion"

    // Mockito
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.mockitoVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"

    // Mockito kotlin
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$rootProject.mockitoKotlinVersion"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$rootProject.mockitoKotlinVersion"

    // Logging
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"
}